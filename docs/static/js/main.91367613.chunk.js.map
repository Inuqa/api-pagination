{"version":3,"sources":["components/book.js","components/pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Book","props","cleanDate","Date","released","toDateString","cleanAuthors","author","join","className","number","name","pages","country","Pagination","React","useState","currentPage","setCurrentPage","itemsPerPage","console","log","data","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","handleOnClick","e","Number","target","id","renderItems","map","item","index","pageNumbers","i","Math","ceil","push","renderPageNumbers","onClick","App","books","setBooks","fetchData","a","axios","get","response","displayData","authors","numberOfPages","isbn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAyBeA,G,MArBF,SAACC,GACZ,IAAMC,EAAY,IAAIC,KAAKF,EAAMG,UAAUC,eACrCC,EAAeL,EAAMM,OAAOC,KAAK,MAEvC,OACE,qBAAKC,UAAU,QAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uCAAUR,EAAMS,UAChB,6BAAKT,EAAMU,OAEX,sBAAKF,UAAU,UAAf,UACE,yCAAYH,KACZ,kDAAqBL,EAAMW,SAC3B,+CAAkBX,EAAMY,WACxB,gDAAmBX,eCmCdY,G,MAjDI,SAACb,GAAW,IAAD,EACUc,IAAMC,SAAS,GADzB,mBACrBC,EADqB,KACRC,EADQ,OAEYH,IAAMC,SAAS,GAF3B,mBAErBG,EAFqB,UAI5BC,QAAQC,IAAIpB,EAAMqB,KAAKC,QAgBvB,IAdA,IAAMC,EAAkBP,EAAcE,EAChCM,EAAmBD,EAAkBL,EACrCO,EAAezB,EAAMqB,KAAKK,MAAMF,EAAkBD,GAElDI,EAAgB,SAACC,GACrBX,EAAeY,OAAOD,EAAEE,OAAOC,MAI3BC,EAAcP,EAAaQ,KAAI,SAACC,EAAMC,GAC1C,OAAO,6BAAiBD,GAARC,MAGZC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKvC,EAAMqB,KAAKC,OAASJ,GAAemB,IAChED,EAAYI,KAAKH,GAGnBlB,QAAQC,IAAIgB,EAAa,IACzB,IAAMK,EAAoBL,EAAYH,KAAI,SAACxB,GACzC,OACE,oBAEEsB,GAAItB,EACJiC,QAASf,EAHX,SAKGlB,GAJIA,MASX,OACE,gCACE,6BACGuB,IAEH,oBAAID,GAAG,eAAP,SACGU,SCDME,MAvCf,WACE,IADa,EAEa7B,IAAMC,SAAS,IAF5B,mBAEN6B,EAFM,KAECC,EAFD,KAIPC,EAAS,uCAAG,WAAOlB,GAAP,eAAAmB,EAAA,sEACOC,IAAMC,IAJhB,2DAGG,OACVC,EADU,OAGhBL,EAASK,EAAS7B,MAHF,2CAAH,sDAOT8B,EAAcP,EAAMX,KAAI,SAACZ,EAAMc,GAAP,OAC5B,cAAC,EAAD,CAAMzB,KAAMW,EAAKX,KACjBJ,OAAQe,EAAK+B,QACbzC,MAAOU,EAAKgC,cACZzC,QAASS,EAAKT,QACdT,SAAUkB,EAAKlB,SACfM,OAAQY,EAAKc,OACRd,EAAKiC,SAKZ,OAFAnC,QAAQC,IAAIwB,GAGV,mCACE,sBAAKpC,UAAU,MAAf,UACE,uDACA,yEAEA,gCACE,wBAAQkC,QAASI,EAAWtC,UAAU,eAAtC,wBACA,0BAEF,cAAC,EAAD,CAAYa,KAAM8B,UC5BXI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91367613.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"../styles.css\"\n\nconst Book = (props) => {\n  const cleanDate = new Date(props.released).toDateString();\n  const cleanAuthors = props.author.join(\", \");\n\n  return(\n    <div className=\"books\">\n      <div className=\"book\">\n        <h3>Book {props.number}</h3>\n        <h2>{props.name}</h2>\n        \n        <div className=\"details\">\n          <p>Author: {cleanAuthors}</p>\n          <p>Number of pages: {props.pages}</p>\n          <p>Book Country: {props.country}</p>\n          <p>Realease Date: {cleanDate}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Book\n","import React from 'react'\n\nimport '../pagination.css'\n\nconst Pagination = (props) => {\n  const [currentPage, setCurrentPage] = React.useState(1)\n  const [itemsPerPage, setItemsPerPage] = React.useState(4)\n\n  console.log(props.data.length)\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = props.data.slice(indexOfFirstItem, indexOfLastItem)\n\n  const handleOnClick = (e) => {\n    setCurrentPage(Number(e.target.id))\n  }\n\n\n  const renderItems = currentItems.map((item, index) => {\n    return <li key={index}>{item}</li>;\n  });\n\n  const pageNumbers = []\n  for (let i = 1; i <= Math.ceil(props.data.length / itemsPerPage); i++) {\n    pageNumbers.push(i)\n  }\n\n  console.log(pageNumbers, 10)\n  const renderPageNumbers = pageNumbers.map((number) => {\n    return (\n      <li\n        key={number}\n        id={number}\n        onClick={handleOnClick}\n      >\n        {number}\n      </li>\n    );\n  });\n\n  return(\n    <div>\n      <ul>\n        {renderItems}\n      </ul>\n      <ul id=\"page-numbers\">\n        {renderPageNumbers}\n      </ul>\n    </div>\n  );\n}\n\nexport default Pagination\n","import React from 'react'\nimport './App.css';\nimport axios from 'axios';\n\nimport Book from './components/book';\nimport Pagination from './components/pagination';\n\nfunction App() {\n  const apiURL = 'https://www.anapioficeandfire.com/api/books?pageSize=30';\n  const [books, setBooks] = React.useState([])\n\n  const fetchData = async (e) => {\n    const response = await axios.get(apiURL)\n\n    setBooks(response.data) \n\n  };\n\n  const displayData = books.map((data, index) => \n    <Book name={data.name}\n    author={data.authors}\n    pages={data.numberOfPages}\n    country={data.country}\n    released={data.released}\n    number={data.index}\n    key={data.isbn}\n    />)\n\n  console.log(books)\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Game of Thrones Books</h1>\n        <h2>Fetch a list from an API and display it</h2>\n\n        <div>\n          <button onClick={fetchData} className=\"fetch-button\">Fetch Data</button>\n          <br />\n        </div> \n        <Pagination data={displayData} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}